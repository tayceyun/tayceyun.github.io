(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{459:function(t,a,s){"use strict";s.r(a);var e=s(30),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"http-浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-浏览器"}},[t._v("#")]),t._v(" http / 浏览器")]),t._v(" "),a("h3",{attrs:{id:"了解多进程浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解多进程浏览器"}},[t._v("#")]),t._v(" 了解多进程浏览器")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("进程之间是"),a("strong",[t._v("相互隔离")]),t._v("的 ，当一个页面或者插件崩溃时，影响到的仅仅是当前的页面进程或者插件进程，并不会影响到浏览器和其他页面，从而解决了历史单进程浏览器中页面或者插件的崩溃会导致整个浏览器崩溃的问题。")])]),t._v(" "),a("li",[a("p",[t._v("Chrome 把插件进程和渲染进程锁在"),a("a",{attrs:{href:"https://baike.baidu.com/item/Sandbox/9280944?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("沙箱"),a("OutboundLink")],1),t._v("里面，这样即使在渲染进程或者插件进程里面执行了恶意程序，恶意程序也无法突破沙箱去获取系统权限。")])]),t._v(" "),a("li",[a("p",[t._v("浏览器是多进程的优点：1️⃣ 默认新开一个 tab 页面新建一个进程,所以单个 tab 页面崩溃不会影响到整个浏览器。2️⃣ 第三方插件崩溃也不会影响到整个浏览器。3️⃣ 多进程可以充分利用现代 CPU 多核的优势。4️⃣ 方便使用沙盒模型隔离插件等进程,提高浏览器的稳定性。")])])]),t._v(" "),a("h3",{attrs:{id:"chrome-浏览器包含哪些进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome-浏览器包含哪些进程"}},[t._v("#")]),t._v(" chrome 浏览器包含哪些进程")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("浏览器进程")]),t._v(" ：主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("渲染进程")]),t._v("：核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下， "),a("strong",[t._v("Chrome 会为每个 Tab 标签创建一个渲染进程")]),t._v("。出于安全考虑，"),a("strong",[t._v("渲染进程都是运行在沙箱模式下")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("GPU 进程")]),t._v("：Chrome 在其多进程架构上引入了 GPU 进程，网页、Chrome 的 UI 界面都采用 GPU 来绘制。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("网络进程")]),t._v("：主要负责页面的网络资源加载。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("插件进程")]),t._v("：主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。")])])]),t._v(" "),a("h3",{attrs:{id:"浏览器内核中线程之间的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核中线程之间的关系"}},[t._v("#")]),t._v(" 浏览器内核中线程之间的关系")]),t._v(" "),a("ul",[a("li",[t._v("GUI （Graphical User Interface）渲染线程和 JS 引擎线程互斥。js 是可以操作 DOM 的，如果在修改这些元素的同时渲染页面(js 线程和 ui 线程 同时运行)，那么渲染线程前后获得的元素数据可能就不一致了。")]),t._v(" "),a("li",[t._v("js 如果执行时间过长就会阻塞页面加载")])]),t._v(" "),a("h3",{attrs:{id:"js-单线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-单线程"}},[t._v("#")]),t._v(" js 单线程")]),t._v(" "),a("p",[t._v("Web Worker 的作用，就是为 JavaScript 创造多线程环境，允许主线程创建 Worker 线程，将一些任务分配给后者运行。但是"),a("strong",[t._v("子线程完全受主线程控制，且不得操作 DOM")]),t._v("。一般使用 Web Worker 的场景是代码中有很多"),a("strong",[t._v("计算密集型或高延迟")]),t._v("的任务，可以考虑分配给 Worker 线程。")]),t._v(" "),a("h3",{attrs:{id:"js-引擎线程和-gui-渲染线程互斥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-引擎线程和-gui-渲染线程互斥"}},[t._v("#")]),t._v(" js 引擎线程和 GUI 渲染线程互斥")]),t._v(" "),a("p",[t._v("解释：js 是可以操作 DOM 的，如果在修改这些元素的同时渲染页面(js 线程和 ui 线程 同时运行)，那么渲染线程前后获得的元素数据可能就不一致了。")]),t._v(" "),a("h3",{attrs:{id:"chrome-打开一个页面需要启动多少进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome-打开一个页面需要启动多少进程"}},[t._v("#")]),t._v(" chrome 打开一个页面需要启动多少进程")]),t._v(" "),a("p",[t._v("打开 1 个页面至少需要 1 个网络进程（页面网络资源加载）、1 个浏览器进程（界面显示，用户交互，子进程管理等功能）、1 个 GPU 进程（UI 界面绘制）以及 1 个 渲染进程（v8 引擎和排版引擎 Blink），")]),t._v(" "),a("h3",{attrs:{id:"浏览器如何渲染网页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何渲染网页"}},[t._v("#")]),t._v(" 浏览器如何渲染网页")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/chrome/%E6%B8%B2%E6%9F%93%E7%BD%91%E9%A1%B5.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_1-处理-html-并构建-dom-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-处理-html-并构建-dom-树"}},[t._v("#")]),t._v(" 1. 处理 HTML 并构建 DOM 树")]),t._v(" "),a("p",[t._v("当解析器到达 script 标签的时候，发生下面四件事情")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("html 解析器停止解析")]),t._v(" "),a("li",[t._v("如果是外部脚本，就从外部网络获取脚本代码")]),t._v(" "),a("li",[t._v("将控制权交给 js 引擎，执行 js 代码")]),t._v(" "),a("li",[t._v("恢复 html 解析器的控制权")])])]),t._v(" "),a("p",[a("strong",[t._v("性能优化之：阻塞解析的 script 标签")])]),t._v(" "),a("p",[t._v("1️⃣ 将脚本放在网页尾部(body 标签底部)会加速代码渲染。原因：")]),t._v(" "),a("p",[t._v("2️⃣ script 标签的三个属性：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("defer")]),t._v("属性：立即请求文件，但不阻塞渲染引擎。页面 HTML 解析完成之后，"),a("code",[t._v("DOMContentLoaded")]),t._v(" 事件触发之前按序依次执行")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("async")]),t._v(" 属性：立即请求文件，但不阻塞渲染引擎。（脚本下载完成后立即执行，顺序不定）也能有助于加载外部脚本。")])]),t._v(" "),a("li",[a("p",[t._v('HTML5 标准 type 属性，对应值为"module”。让浏览器按照 es6 标准将文件当作模块进行解析，'),a("strong",[t._v("默认阻塞效果同 defer，也可以配合 async 在请求完成后立即执行")]),t._v("。")])])]),t._v(" "),a("h4",{attrs:{id:"_2-处理-css-构建-cssom-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-处理-css-构建-cssom-树"}},[t._v("#")]),t._v(" 2. 处理 CSS 构建 CSSOM 树")]),t._v(" "),a("p",[t._v("⚠️ 在构建 CSSOM 树时会"),a("strong",[t._v("阻塞渲染")]),t._v("，直至 CSSOM 树构建完成。并且构建 CSSOM 树是一个十分消耗性能的过程，所以应该尽量保证层级扁平，减少过度层叠，越是具体的 CSS 选择器，执行速度越慢。")]),t._v(" "),a("h4",{attrs:{id:"_3-将-dom-与-cssom-合并成一个渲染树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-将-dom-与-cssom-合并成一个渲染树"}},[t._v("#")]),t._v(" 3. 将 DOM 与 CSSOM 合并成一个渲染树")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/chrome/render.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_4-根据渲染树来布局-计算每个节点的位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-根据渲染树来布局-计算每个节点的位置"}},[t._v("#")]),t._v(" 4. 根据渲染树来布局，计算每个节点的位置")]),t._v(" "),a("h4",{attrs:{id:"_5-调用-gpu-绘制-合成图层-显示在屏幕上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-调用-gpu-绘制-合成图层-显示在屏幕上"}},[t._v("#")]),t._v(" 5. 调用 GPU 绘制，合成图层，显示在屏幕上")]),t._v(" "),a("p",[t._v("一般来说，可以把普通文档流看成一个图层。特定的属性可以生成一个新的图层。不同的图层渲染互不影响，所以对于某些频繁需要渲染的建议单独生成一个新图层，提高性能。但也不能生成过多的图层，会引起反作用。")]),t._v(" "),a("p",[a("strong",[t._v("页面重新渲染")]),t._v("通常需要重复之前的第四步骤(重新生成布局)+第五步骤(重新绘制) 或者 只有第五步骤(重新绘制)")]),t._v(" "),a("h2",{attrs:{id:"性能优化-高效操作-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化-高效操作-dom"}},[t._v("#")]),t._v(" 性能优化：高效操作 dom")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器为了避免两个引擎同时修改页面而造成渲染结果不一致的情况，增加了另外一个机制，这两个引擎具有互斥性，也就是说在某个时刻只有一个引擎在运行，另一个引擎会被阻塞。操作系统在进行线程切换的时候需要保存上一个线程执行时的状态信息并读取下一个线程的状态信息，俗称上下文切换。而这个操作是比较耗时的")])]),t._v(" "),a("li",[a("p",[t._v("每次 DOM 操作就会引发线程的上下文切换--从 JavaScript 引擎切换到渲染引擎执行对应操作，然后再切换回 JavaScript 引擎继续执行，这就带来了性能损耗。单次切换消耗的时间是非常少的，但是如果频繁地大量切换，那么就会产生性能问题")])]),t._v(" "),a("li",[a("p",[t._v("【优化】：避免在循环中操作 dom；减少重绘和重排")])])]),t._v(" "),a("h2",{attrs:{id:"缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[t._v("#")]),t._v(" 缓存机制")]),t._v(" "),a("h3",{attrs:{id:"http-缓存的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存的优点"}},[t._v("#")]),t._v(" http 缓存的优点")]),t._v(" "),a("ul",[a("li",[t._v("减少了冗余的数据传输，减少网费")]),t._v(" "),a("li",[t._v("减少服务器端的压力")]),t._v(" "),a("li",[t._v("Web 缓存能够减少延迟与网络阻塞，进而减少显示某个资源所用的时间")]),t._v(" "),a("li",[t._v("加快客户端加载网页的速度")])]),t._v(" "),a("h3",{attrs:{id:"http-缓存执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存执行过程"}},[t._v("#")]),t._v(" http 缓存执行过程")]),t._v(" "),a("p",[t._v("⚠️ 强缓存（"),a("code",[t._v("Cache-Control")]),t._v(" / "),a("code",[t._v("Expires")]),t._v("）优先级"),a("strong",[t._v("高于")]),t._v("协商缓存（"),a("code",[t._v("Last-Modified")]),t._v(" / "),a("code",[t._v("If-Modified-Since")]),t._v(" 或 "),a("code",[t._v("ETag")]),t._v(" / "),a("code",[t._v("If-None-Match")]),t._v("）")]),t._v(" "),a("p",[t._v("⚠️ 在协商缓存中，"),a("code",[t._v("ETag")]),t._v("优先级比"),a("code",[t._v("Last-Modified")]),t._v("高")]),t._v(" "),a("p",[t._v("⚠️ 当 ctrl+f5 强制刷新网页时，直接从服务器加载，跳过强缓存和协商缓存")]),t._v(" "),a("p",[t._v("⚠️ 当 f5 刷新网页时，跳过强缓存，但是会检查协商缓存")]),t._v(" "),a("h3",{attrs:{id:"执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行过程"}},[t._v("#")]),t._v(" 执行过程")]),t._v(" "),a("blockquote",[a("p",[t._v("第一次浏览器发送请求给服务器时，此时浏览器还没有本地缓存副本，服务器返回资源给浏览器，响应码是 200 OK ，浏览器收到资源后，把"),a("strong",[t._v("资源和对应的响应头")]),t._v("一起缓存下来。")]),t._v(" "),a("p",[t._v("第二次浏览器准备发送请求给服务器时，浏览器会先检查上一次服务端返回的响应头信息中的"),a("code",[t._v("Cache-Control")]),t._v("，它的值是一个相对值，单位为秒，表示资源在客户端缓存的最大有效期，过期时间为第一次请求的时间减去"),a("code",[t._v("Cache-Control")]),t._v("的值，过期时间跟当前的请求时间比较，如果本地缓存资源没过期，那么命中缓存，不再请求服务器("),a("strong",[t._v("强缓存")]),t._v(")。")]),t._v(" "),a("p",[t._v("如果没有命中，浏览器就会把请求发送给服务器，进入"),a("a",{attrs:{href:"#%E7%BC%93%E5%AD%98%E5%8D%8F%E5%95%86"}},[t._v("缓存协商")]),t._v("阶段。")])]),t._v(" "),a("h4",{attrs:{id:"cache-control和expires"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control和expires"}},[t._v("#")]),t._v(" "),a("code",[t._v("Cache-Control")]),t._v("和"),a("code",[t._v("Expires")])]),t._v(" "),a("h5",{attrs:{id:"cache-control常见值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control常见值"}},[t._v("#")]),t._v(" "),a("code",[t._v("Cache-Control")]),t._v("常见值")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/chrome/cache.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"expires"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" "),a("code",[t._v("Expires")])]),t._v(" "),a("p",[t._v("是一个绝对时间。时间格式是如 Mon,10 Jun 2020 10:10:10 GMT，只要发送请求时间是在"),a("code",[t._v("Expires")]),t._v("之前，那么本地缓存始终有效，否则就会去服务器发送请求获取新的资源。如果同时出现"),a("code",[t._v("Cache-Control:max-age")]),t._v("和"),a("code",[t._v("Expires")]),t._v(" ，"),a("code",[t._v("max-age")]),t._v("优先级更高。")]),t._v(" "),a("p",[t._v("‼️ 两者也可以组合使用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Expires")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("p",[a("a",{attrs:{name:"缓存协商"}})]),t._v(" "),a("h3",{attrs:{id:"缓存协商"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存协商"}},[t._v("#")]),t._v(" 缓存协商")]),t._v(" "),a("p",[t._v("❓ 什么情况会进入缓存协商阶段")]),t._v(" "),a("p",[t._v("当第一次请求时服务器返回的响应头中存在以下情况时：")]),t._v(" "),a("p",[t._v("1️⃣ 没有"),a("code",[t._v("Cache-Control")]),t._v("和"),a("code",[t._v("Expires")])]),t._v(" "),a("p",[t._v("2️⃣"),a("code",[t._v("Cache-Control")]),t._v("和"),a("code",[t._v("Expires")]),t._v("已过期")]),t._v(" "),a("p",[t._v("3️⃣"),a("code",[t._v("Cache-Control")]),t._v("设置为"),a("code",[t._v("no-cache")])]),t._v(" "),a("p",[t._v("浏览器第二次请求时就会与服务器进行协商，询问浏览器中的缓存资源是不是旧版本，需不需要更新。")]),t._v(" "),a("p",[t._v("服务器会进行判断，如果缓存和服务端资源的最新版本是一致的，那么就无需再次下载该资源，服务端直接返回 304 Not Modified 状态码。")]),t._v(" "),a("p",[t._v("如果服务器发现浏览器中的缓存已经是旧版本了， 那么服务器就会把最新资源的完整内容返回给浏览器，状态码就是 200 Ok。")]),t._v(" "),a("p",[t._v("那么服务端是根据什么来判断浏览器的缓存是不是最新的呢?")]),t._v(" "),a("p",[t._v("【协商缓存】其实是根据 HTTP 的另外两组头信息，分别是："),a("code",[t._v("Last-Modified")]),t._v(" / "),a("code",[t._v("If-Modified-Since")]),t._v(" 与 "),a("code",[t._v("ETag")]),t._v(" / "),a("code",[t._v("If-None-Match")])]),t._v(" "),a("h4",{attrs:{id:"last-modified-if-modified-since"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-if-modified-since"}},[t._v("#")]),t._v(" "),a("code",[t._v("Last-Modified")]),t._v(" / "),a("code",[t._v("If-Modified-Since")])]),t._v(" "),a("p",[a("strong",[t._v("根据资源修改时间判断资源有无更新")])]),t._v(" "),a("p",[t._v("浏览器第一次请求资源时，服务器会把资源的"),a("strong",[t._v("最新修改时间")]),t._v("(Last-Modified)放在响应头中返回给浏览器；")]),t._v(" "),a("p",[t._v("第二次请求时，浏览器就会把上一次服务器返回的修改时间放在请求头(If-Modified-Since)发送给服务器，服务器就会拿这个时间跟服务器上的资源的最新修改时间进行对比；")]),t._v(" "),a("p",[t._v("服务端会根据请求头"),a("code",[t._v("If-Modified-Since")]),t._v("的值，判断相关资源是否有变化，如果没有，则返回 304 Not Modified，并且不返回资源内容，浏览器使用资源缓存值;否则正常返回资源内容，且更新(Last-Modified)响应头内容。")]),t._v(" "),a("h5",{attrs:{id:"以上方式存在的问题-🙋"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以上方式存在的问题-🙋"}},[t._v("#")]),t._v(" 以上方式存在的问题 🙋")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("精度问题："),a("code",[t._v("Last-Modified")]),t._v("的时间精度为秒，如果在 1 秒内发生修改，那么缓存判断可能会失效;")])]),t._v(" "),a("li",[a("p",[t._v("准度问题：存在一种情况，例如一个文件被修改，然后又被还原，内容并没有发生变化，在这种情况下，浏览器的缓存还可以继续使用，但因为修改时间发生变化，也会重新返回重复的内容。")])])]),t._v(" "),a("p",[a("strong",[t._v("根据资源内容判断有无更新(基于资源的内容的摘要信息(比如 MD5 hash-信息摘要算法 )来判断)")])]),t._v(" "),a("p",[t._v("浏览器第一次请求资源，服务端在返响应头中加入 "),a("code",[t._v("ETag")]),t._v(" 字段， "),a("code",[t._v("ETag")]),t._v(" 字段值为该资源的哈希值。")]),t._v(" "),a("p",[t._v("浏览器发送第二次请求时，会把第一次的响应头信息 "),a("code",[t._v("ETag")]),t._v(" 的值放在 "),a("code",[t._v("If-None-Match")]),t._v(" 的请求头中发送到服务器，服务器将请求头中"),a("code",[t._v("If-None-Match")]),t._v("字段值和最新的资源的哈希值对比，如果相等则返回 304 Not Modified，否则内容有更新，将最新的资源连同最新的摘要信息返回。")]),t._v(" "),a("p",[t._v("用 "),a("code",[t._v("ETag")]),t._v(" 的好处是如果因为某种原因到时资源的修改时间没改变，那么用 "),a("code",[t._v("ETag")]),t._v(" 就能区分资源是不是有被更新。")]),t._v(" "),a("h5",{attrs:{id:"以上方式存在的问题-🙋-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以上方式存在的问题-🙋-2"}},[t._v("#")]),t._v(" 以上方式存在的问题 🙋")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("计算成本：生成哈希值相对于读取文件修改时间而言是一个开销比较大的操作，尤其是对于大文件而言。如果要精确计算则需读取完整的文件内容，如果从性能方面考虑，只读取文件部分内容又容易判断出错。")])]),t._v(" "),a("li",[a("p",[t._v("计算误差：HTTP 并没有规定哈希值的计算方法，所以不同服务端可能会采用不同的哈希值计算方式。这样带来的问题是，同一个资源在两台服务端产生的 "),a("code",[t._v("Etag")]),t._v(" 可能是不相同的，所以对于使用服务器集群来处理请求的网站来说，使用 "),a("code",[t._v("Etag")]),t._v(" 的缓存命中率会有所降低。")])])]),t._v(" "),a("h3",{attrs:{id:"缓存位置-优先级从高到低排列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置-优先级从高到低排列"}},[t._v("#")]),t._v(" 缓存位置,优先级从高到低排列")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Service Worker Cache")]),t._v("：离线缓存")]),t._v(" "),a("li",[a("code",[t._v("Memory Cache")]),t._v("：内存缓存 （效率最快，当渲染进程结束后，内存缓存释放）")]),t._v(" "),a("li",[a("code",[t._v("Disk Cache")]),t._v("：磁盘缓存（存取效率比内存缓存慢，存储容量大，存储时间长）")]),t._v(" "),a("li",[a("code",[t._v("Push Cache")]),t._v("：推送缓存")])]),t._v(" "),a("h2",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),a("h3",{attrs:{id:"cookie-的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的属性"}},[t._v("#")]),t._v(" cookie 的属性")]),t._v(" "),a("p",[t._v("1️⃣"),a("code",[t._v("value")]),t._v("：如果用于保存用户登录态，应该将该值加密，不能使用明文的用户标识")]),t._v(" "),a("p",[t._v("2️⃣"),a("code",[t._v("http-only")]),t._v("：不能通过 js 访问 cookie，减少 xss 攻击")]),t._v(" "),a("p",[t._v("3️⃣"),a("code",[t._v("secure")]),t._v("：只能在协议为 HTTPS 的请求中携带")]),t._v(" "),a("p",[t._v("4️⃣"),a("code",[t._v("same-site")]),t._v("：规定浏览器不能在跨域请求中携带 cookie，减少 csrf 攻击")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/chrome/cookie.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),a("p",[t._v("❓webpack 实现反向代理")]),t._v(" "),a("p",[t._v("1️⃣config 文件")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.example.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// your target host")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("changeOrigin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// needed for virtual hosted sites")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathRewrite")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'^/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rewrite path")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("2️⃣http-proxy-middleware 插件对 api 请求地址代理")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http-proxy-middleware'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// proxy api requests")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exampleProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 options 就是 webpack 里面的 proxy 选项对应的每个选项")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mount `exampleProxy` in web server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exampleProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("3️⃣nginx 把允许跨域的源地址添加到报头里面即可")]),t._v(" "),a("h2",{attrs:{id:"xss-和-csrf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-和-csrf"}},[t._v("#")]),t._v(" XSS 和 CSRF")]),t._v(" "),a("h3",{attrs:{id:"xss-cross-site-scripting-跨站脚本攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-cross-site-scripting-跨站脚本攻击"}},[t._v("#")]),t._v(" XSS（Cross Site Scripting）跨站脚本攻击")]),t._v(" "),a("p",[t._v("理解：攻击者想尽办法将可执行的代码注入到网页中")]),t._v(" "),a("p",[t._v("常见 xss 攻击举例：")]),t._v(" "),a("ul",[a("li",[t._v("窃取网页浏览中的 cookie 值,获取用户敏感信息")]),t._v(" "),a("li",[t._v("劫持流量实现恶意跳转"),a("code",[t._v('<script>window.location.href="http://www.baidu.com";<\/script>')])]),t._v(" "),a("li",[t._v("利用一些可被攻击的域或其它的域信任的特点，以受信任来源的身份请求一些平时不被允许的操作")])]),t._v(" "),a("p",[t._v("❓ 如何防止 xss 攻击")]),t._v(" "),a("ul",[a("li",[t._v("输入检查")]),t._v(" "),a("li",[t._v("输出检查")]),t._v(" "),a("li",[t._v("转义")]),t._v(" "),a("li",[t._v("设置白名单/黑名单过滤")]),t._v(" "),a("li",[t._v("设置 http only 属性，则客户端的脚本就不能获取到 cookie 信息")])]),t._v(" "),a("h4",{attrs:{id:"csp-content-security-policy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csp-content-security-policy"}},[t._v("#")]),t._v(" CSP(Content Security Policy)")]),t._v(" "),a("p",[t._v("CSP 是一种内容安全策略，它用于指示浏览器如何处理页面上的内容，以减少跨站脚本（XSS）攻击的风险。")]),t._v(" "),a("h5",{attrs:{id:"实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现方式"}},[t._v("#")]),t._v(" 实现方式")]),t._v(" "),a("p",[t._v("1.meta 标签设置 CSP")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Content-Security-Policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("default-src 'self'; script-src 'self' 'unsafe-inline' https://api.example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("2.使用 HTTP 响应头设置 CSP")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Security"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Policy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'self'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只允许加载本站资源")]),t._v("\n")])])]),a("h3",{attrs:{id:"csrf-cross-site-request-forgery-跨站请求伪造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-cross-site-request-forgery-跨站请求伪造"}},[t._v("#")]),t._v(" CSRF（Cross-site request forgery）跨站请求伪造")]),t._v(" "),a("p",[t._v("理解：攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF 的关键点在于，"),a("strong",[t._v("跨域请求时会自动携带第三方网站的 cookie")])]),t._v(" "),a("h4",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("1.用户 C 打开浏览器，访问受信任网站 A，输入用户名和密码请求登录网站 A;")]),t._v(" "),a("p",[t._v("2.在用户信息通过验证后，网站 A 产生 Cookie 信息并返回给浏览器，此时用户登录网站 A 成功，可以正常发送请求到网站 A;")]),t._v(" "),a("p",[t._v("3.用户未退出网站 A 之前，在同一浏览器中，打开一个 TAB 页访问网站 B;")]),t._v(" "),a("p",[t._v("4.网站 B 接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点 A;")]),t._v(" "),a("p",[t._v("5.浏览器在接收到这些攻击性代码后，根据网站 B 的请求，在用户不知情的情况下携带 Cookie 信息，向网站 A 发出请求。网站 A 并不知道该请求其实是由 B 发起的，所以会根据用户 C 的 Cookie 信息以 C 的权限处理该请求，导致来自网站 B 的恶意代码被执行。")]),t._v(" "),a("p",[t._v("❓ 如何防止 csrf 攻击")]),t._v(" "),a("ul",[a("li",[t._v("验证码")]),t._v(" "),a("li",[t._v("Cookie 设置 SameSite 属性\nSameSite 属性的值：\n"),a("ul",[a("li",[t._v("None： 任何情况下都会向第三方网站请求发送 Cookie")]),t._v(" "),a("li",[t._v("⭐️Lax：【目前主流浏览器的默认值】只有导航到第三方网站的 Get 链接会发送 Cookie。而跨域的图片 iframe、「fetch 请求，form 表单都不会发送 Cookie")]),t._v(" "),a("li",[t._v("Strict：任何情况下都不会向第三方网站请求发送 Cookie")])])]),t._v(" "),a("li",[t._v("Token：在请求头中带上 Authorization 字段，服务器验证 Token 是否合法")]),t._v(" "),a("li",[t._v("Referer check：HTTP 请求头中验证"),a("code",[t._v("Referer")]),t._v("字段，"),a("code",[t._v("Referer")]),t._v("字段记录了该 HTTP 请求的来源地址。Origin 属性只包含了域名信息，没有包含具体的 URL 路径")])]),t._v(" "),a("h2",{attrs:{id:"语义化标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语义化标签"}},[t._v("#")]),t._v(" 语义化标签")]),t._v(" "),a("h3",{attrs:{id:"语义化结构的页面优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语义化结构的页面优势"}},[t._v("#")]),t._v(" 语义化结构的页面优势")]),t._v(" "),a("p",[t._v("语义类标签对开发者更为友好，使用语义类标签增强了可读性，即便是在没有 CSS 的时候，开发者也能够清晰地看出网页的结构，也更为便于团队的开发和维护。")]),t._v(" "),a("p",[t._v("除了对人类友好之外，语义类标签也十分适宜机器阅读。它的文字表现力丰富，更适合搜索引擎检索(SEO)，也可以让搜索引擎爬虫更好地获取到更多有效信息，有效提升网页的搜索量，并且语义类还可以支持读屏软件，根据文章可以自动生成目录等等。")]),t._v(" "),a("h3",{attrs:{id:"常见的语义化标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的语义化标签"}},[t._v("#")]),t._v(" 常见的语义化标签")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("ul")]),t._v("：无序列表")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ol")]),t._v("：有序列表")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("article")]),t._v("：文章主体")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("em")]),t._v("：重音")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("strong")]),t._v("：表示词很重要")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("abbr")]),t._v("：缩写")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("p")]),t._v("：普通段落")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("hr")]),t._v("：横向分隔线，表示故事走向的转变或者话题的转变")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("header")]),t._v("：通常出现在前部，表示导航或者介绍性的内容（header 中的导航多数是到文章自己的目录）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("footer")]),t._v("：通常出现在尾部，包含一些作者信息、相关链接、版权信息等")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("aside")]),t._v("：表示跟文章主体不那么相关的部分，它可能包含导航、广告等工具性质的内容（aside 中的导航多数是到关联页面或者是整站地图）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("address")]),t._v("：表示“文章(作者)的联系方式”，address 明确地只关联到 article 和 body。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("hgroup")]),t._v("：避免副标题产生额外的一个层级")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("blockquote")]),t._v("：表示段落级引述内容")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("q")]),t._v("：表示行内的引述内容")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("cite")]),t._v("：表示引述的作品名")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("figure")]),t._v("：用于表示与主文章相关的图像、照片等流内容")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("figcaption")]),t._v("：在"),a("code",[t._v("figure")]),t._v("标签内使用，表示图片内容的标题等")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("pre")]),t._v("：表示这部分内容是预先排版过的，不需要浏览器进行排版。")]),t._v(" "),a("ul",[a("li",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("figure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://.....440px-NeXTcube_first_webserver.JPG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("figcaption")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("The NeXT Computer used by Tim Berners-Lee at CERN."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("figcaption")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("figure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("语义化的 HTML 能够支持自动生成目录结构。h1-h6 是最基本的标题，它们表示了文章中不同层级的标题。有时候可能会有副标题，为了避免副标题产生额外的一个层级，可以使用 "),a("code",[t._v("hgroup")]),t._v(" 标签。")]),t._v(" "),a("p",[t._v("示例")])])])])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("hgroup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("JavaScript 对象"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("我们需要模拟类吗?"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("hgroup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("balah balah"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("页面展示")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/html/hgroup.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"【示例】整体结构类的语义标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【示例】整体结构类的语义标签"}},[t._v("#")]),t._v(" 【示例】整体结构类的语义标签")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("nav")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("......"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("nav")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("aside")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("nav")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("......"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("nav")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("aside")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("section")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("......"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("section")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("section")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("......"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("section")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("footer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("......"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("footer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);